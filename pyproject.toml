[tool.poetry]
name = "supermicro-gpu-fan-controller"
version = "0.1.0"
description = "Fan controller for \"passive\" cooled NVIDIA GPUs via ipmitool and nvidia-smi."
authors = ["greenstar1151 <39073901+greenstar1151@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "supermicro_gpu_fan_controller"}]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.278"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# from https://github.com/Netflix/dispatch/blob/master/pyproject.toml

[tool.black]
line-length = 100
target_version = ['py310']
include = '\.pyi?$'
force-exclude = 'typings'

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C4", # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # complexity
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C4", "D", "E", "F", "I"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "typings",
]

# Same as Black.
line-length = 100

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.per-file-ignores]

